Prop
Type
Type
Type1
Type_
Type(_+2)
Nat
ListNat
idNat
id(id(idNat))
ListNat
@idTypeNat
List.{0}Nat
id.{2}Nat
id(@idTypeNat)
λ(a : Nat)=>a
λ(ab : Nat)=>a
λ(a : Nat)(b : Bool)=>a
λ{ab : Nat}=>a
typeAs({α : Type} → α → α)λ{α : Type}(a : α)=>a
λ{α : Type}[_inst_1 : HasToStringα](a : α)=>@HasToString.toStringα_inst_1a
(α : Type) → α
(αβ : Type) → α
Type → Type → Type
(α : Type) → α → α
(α : Type) → (a : α) → Eqaa
{α : Type} → α
{α : Type} → [_inst_1 : HasToStringα] → α
0
1
42
"hi"
(Prod.mk12).fst
or(HasLess.Less12)Bool.true
id(λ(a : Nat)=>a)0
