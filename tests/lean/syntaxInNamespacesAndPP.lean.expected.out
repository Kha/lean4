[Elab.command] #check foo true
true : Bool
[Elab.step] expected type: <not-available>, term
foo true
[Elab.step] expected type: <not-available>, term
  true
  [Elab.app.args] explicit: false, true : Bool
    [Elab.app.finalize] true
    [Elab.app.finalize] after etaArgs, true : Bool
[Elab.command] end 
[Elab.command] #check bla true
true : Bool
[Elab.step] expected type: <not-available>, term
bla true
[Elab.step] expected type: <not-available>, term
  true
  [Elab.app.args] explicit: false, true : Bool
    [Elab.app.finalize] true
    [Elab.app.finalize] after etaArgs, true : Bool
[Elab.command] end 
def Bla.bla : Lean.ParserDescr :=
Lean.ParserDescr.node (Lean.Name.mkStr (Lean.Name.mkStr Lean.Name.anonymous "Bla") "bla") 1022
  (Lean.ParserDescr.binary (Lean.Name.mkStr Lean.Name.anonymous "andthen") (Lean.ParserDescr.symbol "bla")
    (Lean.ParserDescr.cat (Lean.Name.mkStr Lean.Name.anonymous "term") 0))
